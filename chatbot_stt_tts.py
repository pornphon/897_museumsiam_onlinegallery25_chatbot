import openai
import pyttsx3
import requests
from tts_botnoi import tts
import os
from playsound import playsound

#‡πÉ‡∏ä‡πâ open AI ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ stt ‡∏à‡∏≤‡∏Å mp3 (transcripe) + tts  ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ botnoi  ‡πÅ‡∏ï‡πà botnoi ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö stream ‡πÑ‡∏î‡πâ

client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
#client = os.getenv("OPENAI_API_KEY")
BOTNOI_TOKEN = os.getenv("BOTNOI_TOKEN")

print(f"Boinoi_Token {BOTNOI_TOKEN}")

def transcribe_audio(file_path):
    with open(file_path, "rb") as audio_file:
        transcript = client.audio.transcriptions.create(
            model="whisper-1",
            file=audio_file,
            language="th",
            prompt="‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÇ‡∏ö‡∏£‡∏≤‡∏ì ‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå ‡∏•‡∏≤‡∏¢‡∏à‡∏µ‡∏ô ‡∏ñ‡πâ‡∏ß‡∏¢‡πÄ‡∏Ñ‡∏•‡∏∑‡∏≠‡∏ö"
        )
    return transcript.text

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏´‡∏•‡∏î‡πâ‡∏ß‡∏¢ GPT
def rewrite_text_with_gpt(text: str, model="gpt-4") -> str:
    response = client.chat.completions.create(
        model=model,
        messages=[
            {
                "role": "system",
                "content": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πà‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏´‡πâ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏´‡∏• ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•"
            },
            {
                "role": "user",
                "content": f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢:\n{text}"
            }
        ]
    )
    return response.choices[0].message.content


#text->speech
def tts(text):
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á TTS ‡∏î‡πâ‡∏ß‡∏¢ Botnoi API
    url = "https://api-voice.botnoi.ai/openapi/v1/generate_audio"
    payload = {
        "text": text,
        "speaker": "6",
        "volume": 1,
        "speed": 1,
        "type_media": "m4a",
        "save_file": "true",
        "language": "th",
    }
    headers = {
    #    'Botnoi-Token': 'kiMZTMEAeyjHfESIJANIoOmryvUAe4CU',
        'Botnoi-Token': BOTNOI_TOKEN,
        'Content-Type': 'application/json'
    }
    response = requests.post(url, headers=headers, json=payload)

    if response.ok:
        result = response.json()
        print("‚úÖ API response:", result)
        audio_url = response.json().get("audio_url")
        print("üîä Playing:", audio_url)

        # ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
        audio_response = requests.get(audio_url)
        temp_path = "temp_audio.m4a"
        with open(temp_path, "wb") as f:
            f.write(audio_response.content)

        # ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        playsound(temp_path)

        # ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
        os.remove(temp_path)
    else:
        print("‚ùå Error:", response.text)


# ‚úÖ Main: ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå mp3 ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
if __name__ == "__main__":
    input_mp3 = "v01.mp3"  # ‚Üê ‡πÅ‡∏Å‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ

    print("üì• ‡∏ñ‡∏≠‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å mp3...")
    raw_text = transcribe_audio(input_mp3)
    print("üìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏¥‡∏ö:", raw_text)



    # print("‚úçÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏´‡∏•...")
    # refined = rewrite_text_with_gpt(raw_text)
    # print("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö:", refined)

    print("üîä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏π‡∏î‡∏≠‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á...")
    ##tts(raw_text)
    tts("‡∏à‡∏≤‡∏ô‡∏î‡∏¥‡∏ô‡πÄ‡∏ú‡∏≤‡∏õ‡∏≤‡∏Å‡∏ú‡∏≤‡∏¢‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏•‡∏≤‡∏¢‡∏™‡∏µ‡∏î‡∏≥‡πÉ‡∏ï‡πâ‡πÄ‡∏Ñ‡∏•‡∏∑‡∏≠‡∏ö ‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏õ‡∏•‡∏≤‡πÉ‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏° ‡∏ú‡∏•‡∏¥‡∏ï‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ï‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢")
